You said:
@using Fashion_Flex.Repository
@using System.Security.Claims
@using Fashion_Flex.IRepositories
@inject IOrderItemRepository OrderItemRepository
@inject IOrderRepository OrderRepository
@inject ICustomerRepository CustomerRepository
@{
	ViewData["Title"] = "CheckOut";
	Layout = "_CozaStoreLayout";

	var customer = new Customer();
	var customerCurrOrder = new Order();
	List<Order_Item> customerOrderItems = new List<Order_Item>();

	@if (User.Identity.IsAuthenticated)
	{
		customer = CustomerRepository.GetByApplicationUserId(User.FindFirstValue(ClaimTypes.NameIdentifier));

			@if (customer != null)
			{
				customerCurrOrder = OrderRepository.GetCustomerCurrOrder(customer.Id);
				@if (customerCurrOrder != null)
				{
					customerOrderItems = OrderItemRepository.GetByOrderId(customerCurrOrder.Id);
				}
			}

	}
}

<script src="https://js.stripe.com/v3/"></script>

<div class="m-tb-50">
	<!-- breadcrumb -->

	<div class="container">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
			<a asp-controller="Home" asp-action="Index" class="stext-109 cl8 hov-cl1 trans-04">
				Home
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>

			<span class="stext-109 cl4">
				Shoping Cart
			</span>
		</div>
	</div>


	<!-- Shoping Cart -->
	<form id="payment-form" method="post" class="bg0 p-t-75 p-b-85">
		<div class="container">
			<div class="row">
				<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
					<div class="m-l-25 m-r--38 m-lr-0-xl">
						<div class="wrap-table-shopping-cart">
							<table class="table-shopping-cart">
								@if (customerOrderItems.Count() > 0)
								{
									<tr class="table_head">
										<th class="column-1">Product</th>
										<th class="column-2"></th>
										<th class="column-3">Price</th>
										<th class="column-4">Quantity</th>
										<th class="column-5">Total</th>
									</tr>
									@foreach (var item in customerOrderItems)
									{
										<tr class="table_row">
											<td class="column-1">
												<a asp-controller="OrderItem" asp-action="Delete" asp-route-id="@item.Id">
													<div class="how-itemcart1">
														<img src="~/images/@item.Product.Image" alt="IMG">
													</div>
												</a>
											</td>
											<td class="column-2">@item.Product.Name</td>
											<td class="column-3">$ @item.Product.Price</td>
											<td class="column-4">
												<div class="wrap-num-product flex-w m-l-auto m-r-0">
													
													<!-- Button to decrease quantity -->
													<button type="button" class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m" onclick="updateQuantity('@item.Id', 'decrease')">
														<i class="fs-16 zmdi zmdi-minus"></i>
													</button>

													<input class="mtext-104 cl3 txt-center num-product" type="number" name=@item.Product.Name value="@item.Quantity" readonly>
													
													<!-- Button to increase quantity -->
													<button type="button" class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m" onclick="updateQuantity('@item.Id', 'increase')">
														<i class="fs-16 zmdi zmdi-plus"></i>
													</button>
												</div>
											</td>
											@{
												var total = @item.Product.Price * @item.Quantity;
											}
											<td class="column-5">$ @total</td>
										</tr>
									}

								}
								else
								{
									<p class="flex-c-m trans-04 p-lr-25 text-dark">The Cart is empty</p>
								}
							</table>
						</div>

						@if (customerOrderItems.Count() > 0)
						{
							<div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
								<div class="flex-c-m flex-t p-b-13 ml-auto">
									<div class="">
										<span class="stext-110 cl2">
											Subtotal:
										</span><br />
										<span class="mtext-110 cl2">
											$ @customerCurrOrder.Total_Amount
										</span>
									</div>
								</div>
							</div>
						}
					</div>
				</div>



				<!-- Billing Address -->

				<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
					<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
						<h4 class="mtext-109 cl2 p-b-30">
							Billing Address
						</h4>

						<div class="flex-w flex-t bor12 p-t-15 p-b-30">
							<div class="size-208 w-full-ssm">
								<span class="stext-110 cl2">
									Shipping Address:
								</span>
							</div>

							<div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
								<div class="p-t-15">
									<span class="stext-112 cl8">
										Calculate Shipping
									</span>

									<div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
										<select class="js-select2" name="time">
											<option>Select a country...</option>
											<option>USA</option>
											<option>UK</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>

									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="state" placeholder="State /  country">
									</div>

									<div class="bor8 bg0 m-b-22">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="postcode" placeholder="Postcode / Zip">
									</div>
									<div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
										<select id="payment-method" class="js-select2" name="time" onchange="changeFunc()">
											<option>Payment Method...</option>
											<option value="cod">Cash On Delivery</option>
											<option value="card">By Card</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>									

								</div>
							</div>
						</div>

						<div id="card-element"><!-- Stripe Card Element will be inserted here --></div>

						<div class="flex-w flex-t p-t-27 p-b-33">
							<div class="size-208">
								<span class="mtext-101 cl2">
									Total:
								</span>
							</div>

							<div class="size-209 p-t-1">
								<span class="mtext-110 cl2">
									$79.65
								</span>
							</div>
						</div>


						<div class="header-cart-buttons flex-w w-full">

							<button type="submit" class="flex-c-m stext-101 cl0 size-107 bg3 bor2 hov-btn3 p-lr-15 trans-04 m-b-10">
								Proceed to Checkout
							</button>
						</div>


						<div id="card-errors" role="alert"></div>

					</div>
				</div>
			</div>
		</div>
	</form>
</div>

@section Scripts {
	<script>
		function updateQuantity(orderItemId, action) {
			$.ajax({
				url: '/OrderItem/' + (action === 'increase' ? 'IncreaseQuantity' : 'DecreaseQuantity'),
				type: 'POST',
				data: {
					orderItemId: orderItemId
				},
				success: function (result) {
					// Optionally, reload part of the page or update the quantities directly.
					location.reload(); // Refresh the page to show updated data
				},
				error: function (xhr, status, error) {
					console.log(error); // Handle the error
				}
			});
		}
	</script>

	<!--Change Payment Method => Toggle Card Field visibility-->
	<script>
		function changeFunc() {
			var paymentMethod = document.getElementById('payment-method').value;
			var cardElement = document.getElementById('card-element');


			if (paymentMethod === 'card') {
				cardElement.style.display = 'block'; // Show the card element
			} else {
				cardElement.style.display = 'none'; // Hide the card element
			}
		}
	</script>




	<!--Payment Script-->
	<script>
		var stripe = Stripe('pk_test_51Q4QBrH9Tu9XpeFQYfgwrpFWlwTyDDEa9e9on0QIYuWb9qsI4BtbtdSPxyFg8k8cSHqDGgDgq9bLrzZUzQ2kIzNP00gZBhVn1q');
		var elements = stripe.elements();

		// Create a card element with postal code hidden
		var card = elements.create('card', {
			hidePostalCode: true // This hides the postal code field
		});

		card.mount('#card-element');

		var form = document.getElementById('payment-form');
		form.addEventListener('submit', async function (event) {
			event.preventDefault();

			// Get the selected payment method
			var paymentMethod = document.getElementById('payment-method').value;

			// Only proceed with creating the payment intent if the payment method is 'card'
			if (paymentMethod === 'card') {
				// Call backend code (in StripeController/CreatePaymentIntent)
				const { clientSecret } = await fetch('/create-payment-intent', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ amount: 5000 }) // Example amount: $5000.00
				}).then(r => r.json());

				const result = await stripe.confirmCardPayment(clientSecret, {
					payment_method: {
						card: card
					}
				});

				if (result.error) {
					document.getElementById('card-errors').textContent = result.error.message;
				} else {
					if (result.paymentIntent.status === 'succeeded') {
						alert('Payment successful!');
					}
				}
			} else {

				// Handle the case for other payment methods
				alert("Payment with cash");
			}
		});
	</script>



	<!--Style for Card Element-->
	<style>
		#card-element {
			display: none; /* Initially hidden */
			margin-top: 30px; /* Adjust margin to prevent overlap with header */
			margin-bottom: 20px; /* Adjust margin to prevent overlap with header */
			height: 50px; /* Increase the height of the card element */
			border: 1px solid #ccc; /* Optional: Add border to the card field */
			border-radius: 4px; /* Optional: Rounded corners */
			padding: 10px; /* Optional: Padding inside the card field */
		}

		#card-errors {
			color: red; /* Error text color */
			margin-top: 10px; /* Space above error messages */
		}
	</style>

}